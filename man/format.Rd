% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/async.r, R/gen.R, R/stream.R
\name{getNode.coroutine}
\alias{getNode.coroutine}
\alias{format.async}
\alias{getState.async}
\alias{getState}
\alias{getState.generator}
\alias{getNode}
\alias{getNode.generator}
\alias{format.generator}
\alias{format.stream}
\alias{getNode.stream}
\alias{getState.stream}
\alias{getOrig.stream}
\title{Query / display coroutine properties and state.
\code{format.generator} displays the original code given
to construct the generator, its bound environment, whether it is running
or finished, and a label indicating it last known state.}
\usage{
\method{getNode}{coroutine}(x, ...)

\method{format}{async}(x, ...)

\method{getState}{async}(x)

getState(x, ...)

\method{getState}{generator}(x, ...)

getNode(x, ...)

\method{getNode}{generator}(x, ...)

\method{format}{generator}(x, ...)

\method{format}{stream}(x, ...)

\method{getNode}{stream}(x, ...)

\method{getState}{stream}(x)

\method{getOrig}{stream}(x, ...)
}
\description{
\code{getState.generator} retreives the current state of a
generator. This might be "yielded", "running" (if nextElem is
\emph{currently} being called), "stopped" (for generators that have
stopped with an error) or "finished" (for generators that have
finished normally.)
}
\details{
\code{getState.async} might return "running", "awaiting", "resolved" or
"rejected".

\code{getState.stream} might return "running", "awaiting", "yielding",
"yielded", "resolved" or "rejected".

\code{getNode} returns a string identifier indicating where a
coroutine's execution was last paused. The string is like an
adsress pointing to a spot in the orginal expression's parse tree;
a string like \verb{.\{1.<-2.await__then} can be read like
"in the first argument of \verb{\{}, in the second argument of \verb{<-}, in a
call to await(), at internal node \code{then}."

\code{getOrig} returns the original expression given to the generator
constructor.
}
