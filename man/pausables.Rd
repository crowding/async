% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/syntax.R
\name{pausables}
\alias{pausables}
\title{List pausable functions.}
\usage{
pausables(envir = caller(), packages = base::.packages(...), ...)
}
\arguments{
\item{envir}{The environment to search (defaulting to the calling environment).}

\item{packages}{Which packages to search; defaults to currently loaded packages. You can scan all packages with `pausables(packages=base::.packages(all.available=TRUE))`}
}
\value{
A list of expressions (either names or `:::` calls)
}
\description{
`async` and `gen()` rely on "pausable" workalikes for R functions
like `if`, `while`, and so on. `pausables()` scans for and returns
a list of all known pausable functions.
}
\details{
It is possible for a third party package to define pausable
functions. To do this:
1. Define and export a function `yourname` and an ordinary R implementation
(the pausable version is only used when there is an `await` or
`yield` in the arguments.)
2. Also define a function `yourname_cps` in your package namespace. (It
does not need to be exported.)

The `yourname_cps` should have the pausable (callback based)
implementation. The API for how pausable functions work is not yet
fixed, but it is outlined in source file `cps.r` along with
examples for core R functions.
}
