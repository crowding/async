Package: async
Title: Async/Await, Generators, Yield
Version: 0.1
Authors@R: 
    person(given = "Peter",
           family = "Meilstrup",
           role = c("aut", "cre"),
           email = "peter.meilstrup@gmail.com")
Description: Write sequential-looking code that can pause and resume.
             `gen()` creates a generator, an iterator that returns a
             value and pauses when it reaches a `yield()` call. `async()`
             blocks use `await()` calls to pause, then resume when
             information is available. These work similarly to
             generator and async constructs from Python or Javascript.
             Objects produced are compatible with the 'iterators' and
             'promises' packages.
License: BSD
Encoding: UTF-8
LazyData: true
Imports:
        nseval (>= 0.4.2),
        iterators,
        itertools,
        future,
        promises
Suggests:
    testthat (>= 2.1.0),
    knitr,
    rmarkdown,
    audio,
    profvis,
    later
RoxygenNote: 7.1.1
VignetteBuilder: knitr
